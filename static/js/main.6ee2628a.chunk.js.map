{"version":3,"sources":["Components/ContactForm/ContactForm.js","App.js","index.js"],"names":["ContactForm","contName","uuid","contNumber","state","name","number","active","contact","handleChangeAllInputs","e","target","value","setState","handleSubmit","preventDefault","props","addNewContact","resetForm","this","onSubmit","htmlFor","type","id","pattern","title","required","onChange","disabled","Component","App","contacts","obj","prevState","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAGqBA,E,4MACnBC,SAAWC,c,EACXC,WAAaD,c,EAEbE,MAAQ,CACNC,KAAM,GACNC,OAAQ,GAERC,QAAQ,EACRC,QAAS,M,EAGXC,sBAAwB,SAACC,GACvB,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBR,EAAOO,K,EAG1BE,aAAe,SAACJ,GACdA,EAAEK,iBACF,MAAyB,EAAKX,MACxBI,EAAU,CACdH,KAFF,EAAQA,KAGNC,OAHF,EAAcA,QAKd,EAAKO,SAAS,CAAEL,YAChB,EAAKQ,MAAMC,cAAcT,GACzB,EAAKU,a,EAGPA,UAAY,WACV,EAAKL,SAAS,CAAER,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,IAAQQ,EAA8DK,KAA9DL,aAAcL,EAAgDU,KAAhDV,sBAAuBN,EAAyBgB,KAAzBhB,WAAYF,EAAakB,KAAblB,SACzD,EAAiCkB,KAAKf,MAA9BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,OACtB,OACE,uBAAMa,SAAUN,EAAhB,UACE,uBAAOO,QAASpB,EAAhB,2BACA,uBACEqB,KAAK,OACLC,GAAItB,EACJI,KAAK,OACLO,MAAOP,EACPmB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUlB,IAEZ,uBACA,uBAAOY,QAASlB,EAAhB,6BACA,uBACEmB,KAAK,MACLC,GAAIpB,EACJE,KAAK,SACLO,MAAON,EACPkB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUlB,IAEZ,uBACA,wBAAQa,KAAK,SAASM,SAAUrB,EAAhC,gC,GA9DiCsB,aCEpBC,G,wNACnB1B,MAAQ,CACN2B,SAAU,I,EAGZd,cAAgB,SAACe,GACf,EAAKnB,UAAS,SAACoB,GACb,MAAO,CACLF,SAAS,GAAD,mBAAME,EAAUF,UAAhB,CAA0BC,S,4CAKxC,WAEE,OADAE,QAAQC,IAAIhB,KAAKf,MAAM2B,UAErB,gCACE,2CACA,cAAC,EAAD,CAAad,cAAeE,KAAKF,gBACjC,iD,GAnByBY,cCCjCO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6ee2628a.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nexport default class ContactForm extends Component {\n  contName = uuid();\n  contNumber = uuid();\n\n  state = {\n    name: \"\",\n    number: \"\",\n\n    active: false,\n    contact: null,\n  };\n\n  handleChangeAllInputs = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const contact = {\n      name,\n      number,\n    };\n    this.setState({ contact });\n    this.props.addNewContact(contact);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { handleSubmit, handleChangeAllInputs, contNumber, contName } = this;\n    const { name, number, active } = this.state;\n    return (\n      <form onSubmit={handleSubmit}>\n        <label htmlFor={contName}>Contacts name</label>\n        <input\n          type=\"text\"\n          id={contName}\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChangeAllInputs}\n        />\n        <br />\n        <label htmlFor={contNumber}>Contacts number</label>\n        <input\n          type=\"tel\"\n          id={contNumber}\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChangeAllInputs}\n        />\n        <br />\n        <button type=\"submit\" disabled={active}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport Filter from \"./Components/Filter/Filter\";\nimport ContactList from \"./Components/ContactList/CotnactList\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n  };\n\n  addNewContact = (obj) => {\n    this.setState((prevState) => {\n      return {\n        contacts: [...prevState.contacts, obj],\n      };\n    });\n  };\n\n  render() {\n    console.log(this.state.contacts);\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm addNewContact={this.addNewContact} />\n        <h2>Contacts</h2>\n        {/* <Filter />\n        <ContactList /> */}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}