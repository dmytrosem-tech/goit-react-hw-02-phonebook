{"version":3,"sources":["Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","contName","uuid","contNumber","state","name","number","active","contact","handleChangeAllInputs","e","target","value","setState","handleSubmit","preventDefault","props","addNewContact","resetForm","this","onSubmit","htmlFor","type","id","pattern","title","required","onChange","disabled","Component","Filter","filter","ContactList","contacts","deleteContact","className","map","onClick","App","obj","prevState","contactId","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAGqBA,E,4MACnBC,SAAWC,c,EACXC,WAAaD,c,EAEbE,MAAQ,CACNC,KAAM,GACNC,OAAQ,GAERC,QAAQ,EACRC,QAAS,M,EAGXC,sBAAwB,SAACC,GACvB,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBR,EAAOO,K,EAG1BE,aAAe,SAACJ,GACdA,EAAEK,iBACF,MAAyB,EAAKX,MACxBI,EAAU,CACdH,KAFF,EAAQA,KAGNC,OAHF,EAAcA,QAKd,EAAKO,SAAS,CAAEL,YAChB,EAAKQ,MAAMC,cAAcT,GACzB,EAAKU,a,EAGPA,UAAY,WACV,EAAKL,SAAS,CAAER,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,IAAQQ,EAA8DK,KAA9DL,aAAcL,EAAgDU,KAAhDV,sBAAuBN,EAAyBgB,KAAzBhB,WAAYF,EAAakB,KAAblB,SACzD,EAAiCkB,KAAKf,MAA9BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,OACtB,OACE,uBAAMa,SAAUN,EAAhB,UACE,uBAAOO,QAASpB,EAAhB,2BACA,uBACEqB,KAAK,OACLC,GAAItB,EACJI,KAAK,OACLO,MAAOP,EACPmB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUlB,IAEZ,uBACA,uBAAOY,QAASlB,EAAhB,6BACA,uBACEmB,KAAK,MACLC,GAAIpB,EACJE,KAAK,SACLO,MAAON,EACPkB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUlB,IAEZ,uBACA,wBAAQa,KAAK,SAASM,SAAUrB,EAAhC,gC,GA9DiCsB,aCDnCC,E,4MACJ1B,MAAQ,CACN2B,OAAQ,I,4CAEV,WACE,OAAO,uBAAOT,KAAK,OAAOjB,KAAK,e,GALdwB,aASNC,ICOAE,MAhBf,YAAmD,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,cAC/B,OACE,oBAAIC,UAAU,WAAd,SACGF,EAASG,KAAI,gBAAG/B,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQiB,EAAjB,EAAiBA,GAAjB,OACZ,qBAAaY,UAAU,gBAAvB,UACE,mBAAGA,UAAU,gBAAb,SAA8B9B,IAC9B,mBAAG8B,UAAU,kBAAb,SAAgC7B,IAChC,wBAAQ+B,QAAS,kBAAMH,EAAcX,IAAKY,UAAU,eAApD,8BAHOZ,SCDIe,E,4MACnBlC,MAAQ,CACN6B,SAAU,CACR,CAAEV,GAAI,OAAQlB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEiB,GAAI,OAAQlB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEiB,GAAI,OAAQlB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEiB,GAAI,OAAQlB,KAAM,iBAAkBC,OAAQ,e,EAIlDW,cAAgB,SAACsB,GACf,EAAK1B,UAAS,SAAC2B,GACb,MAAO,CACLP,SAAS,GAAD,mBAAMO,EAAUP,UAAhB,CAA0BM,S,EAKxCL,cAAgB,SAACO,GACf,EAAK5B,UAAS,SAAC6B,GAAD,MAAW,CACvBT,SAAUS,EAAKT,SAASF,QAAO,SAACvB,GAAD,OAAaA,EAAQe,KAAOkB,U,4CAI/D,WACE,IAAQxB,EAAiCE,KAAjCF,cAAeiB,EAAkBf,KAAlBe,cACvB,OACE,gCACE,2CACA,cAAC,EAAD,CAAajB,cAAeA,IAC5B,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,CACEgB,SAAUd,KAAKf,MAAM6B,SACrBC,cAAeA,W,GAlCQL,aCCjCc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ff2721ae.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nexport default class ContactForm extends Component {\r\n  contName = uuid();\r\n  contNumber = uuid();\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n\r\n    active: false,\r\n    contact: null,\r\n  };\r\n\r\n  handleChangeAllInputs = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n    this.setState({ contact });\r\n    this.props.addNewContact(contact);\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmit, handleChangeAllInputs, contNumber, contName } = this;\r\n    const { name, number, active } = this.state;\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor={contName}>Contacts name</label>\r\n        <input\r\n          type=\"text\"\r\n          id={contName}\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChangeAllInputs}\r\n        />\r\n        <br />\r\n        <label htmlFor={contNumber}>Contacts number</label>\r\n        <input\r\n          type=\"tel\"\r\n          id={contNumber}\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChangeAllInputs}\r\n        />\r\n        <br />\r\n        <button type=\"submit\" disabled={active}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\n\nclass Filter extends Component {\n  state = {\n    filter: \"\",\n  };\n  render() {\n    return <input type=\"text\" name=\"filter\" />;\n  }\n}\n\nexport default Filter;\n","import React from \"react\";\n\nfunction ContactList({ contacts, deleteContact }) {\n  return (\n    <ul className=\"contacts\">\n      {contacts.map(({ name, number, id }) => (\n        <li key={id} className=\"contact__item\">\n          <p className=\"contact__name\">{name}</p>\n          <p className=\"contact__number\">{number}</p>\n          <button onClick={() => deleteContact(id)} className=\"contact__btn\">\n            Delete contact\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import { Component } from \"react\";\nimport ContactForm from \"./Components/ContactForm\";\nimport Filter from \"./Components/Filter\";\nimport ContactList from \"./Components/ContactList\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n  };\n\n  addNewContact = (obj) => {\n    this.setState((prevState) => {\n      return {\n        contacts: [...prevState.contacts, obj],\n      };\n    });\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prev) => ({\n      contacts: prev.contacts.filter((contact) => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { addNewContact, deleteContact } = this;\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm addNewContact={addNewContact} />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList\n          contacts={this.state.contacts}\n          deleteContact={deleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}